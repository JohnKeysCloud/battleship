!function(){"use strict";var t={d:function(e,n){for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}};t.d({},{y:function(){return et}});const e=(t,e)=>t.length===e.length&&t.every(((t,n)=>t===e[n])),n=t=>new Promise((e=>setTimeout(e,t))),i=(t,e,n)=>{const i=t.getAttribute(e);if(!i||!n(i))throw new Error(`Invalid or missing attribute: ${e}`);return i},r=(t,e)=>Math.floor(Math.random()*(e-t+1))+t,a=(t,e=[],n={})=>{const i=document.createElement(t);return e.forEach((t=>i.classList.add(t))),Object.entries(n).forEach((([t,e])=>i.setAttribute(t,e))),i},o=(t,e)=>new Promise((n=>{const i=()=>{t.removeEventListener("transitionend",i),n(),e&&e()};t.addEventListener("transitionend",i)})),s=(t,e,n)=>new Promise((i=>{const r=a=>{t.removeEventListener(e,r),i(a),n&&n()};t.addEventListener(e,r)}));var l,h,d;!function(t){t[t.Degrees0=0]="Degrees0",t[t.Degrees90=90]="Degrees90",t[t.Degrees180=180]="Degrees180",t[t.Degrees270=270]="Degrees270"}(l||(l={})),(d=h||(h={})).Battleship="battleship",d.Carrier="carrier",d.Cruiser="cruiser",d.Destroyer="destroyer",d.PatrolBoat="patrolBoat",d.Submarine="submarine";const c=t=>!(!Array.isArray(t)||2!==t.length)&&t.every((t=>"number"==typeof t)),u=t=>"string"==typeof t&&["horizontal","vertical"].includes(t),p=t=>"outOfBounds"===t,g=t=>"object"==typeof t&&null!==t&&!!c(t.coordinates),m=t=>{if(!(t=>{if("object"!=typeof t||null===t)return!1;const e=Object.getPrototypeOf(t);return e===Object.prototype||null===e})(t))return!1;const{bow:e,stern:n}=t;return c(e)&&c(n)},y=t=>Object.values(h).includes(t);function f(t,n){if(!t)throw new Error("Invalid Command: `gameboardController` is required to randomize the gameboard.");if(!n)throw new Error("Invalid Command: `fleet` is required to randomize the gameboard.");const i=(n,a,o,s=0)=>{if(s>100)throw new Error(`Max recursion depth exceeded when placing the ${n.type}.`);const l=((t,e)=>{const n=e-t;return[r(0,n),r(0,n)]})(n.length,o);return((n,i,r)=>{const a={shipLength:i.length,orientation:r},o=t.getValidPositions(a),[s,l]=n,h="horizontal"===r,d=h?l:s;return o[h?`row-${d}`:`column-${d}`].some((t=>e(t.bow,n)))})(l,n,a)?l:i(n,a,o,s+1)};for(const e in n){if(!y(e))throw new Error(`Invalid Type: "${e}" doesn't conform to "ShipType".`);const r=n[e],a=Math.random()<.5?"horizontal":"vertical",o={ship:r,coordinates:i(r,a,10),orientation:a};t.placePiece(o)}}const C={[h.Carrier]:Symbol("CA"),[h.Battleship]:Symbol("BS"),[h.Cruiser]:Symbol("CR"),[h.Submarine]:Symbol("SB"),[h.Destroyer]:Symbol("DD"),[h.PatrolBoat]:Symbol("PB")},b={"battleship-1990":4,"battleship-2002":4,"carrier-1990":5,"carrier-2002":5,"cruiser-1990":3,"cruiser-2002":void 0,"destroyer-1990":2,"destroyer-2002":3,"patrolBoat-1990":void 0,"patrolBoat-2002":2,"submarine-1990":3,"submarine-2002":3};class S{seaworthy=!0;rotationalPivotConfigurations={transientAngleOfRotation:null,coordinatesArray:null,orientation:null};currentplacementConfigurations={coordinatesArray:null,orientation:null};isPlaced=()=>null!==this.currentplacementConfigurations.coordinatesArray;_hitCounter=0;constructor(t,e=2002){this.type=t,this.version=e,this.symbol=C[t];const n=`${t}-${e}`,i=b[n];if(void 0===i)throw new Error(`Invalid Command: ship type/version combination: ${n}.`);this.length=i}hit=()=>this.isSeaworthy()?(this._hitCounter++,`Hit registered. Hit count: ${this.hitCounter}.`):"This ship has already perished.";isSeaworthy=()=>this.hitCounter<this.length;resetConfigurations=t=>{const e={coordinatesArray:null,orientation:null};this.currentplacementConfigurations=e,!0===t&&(this.rotationalPivotConfigurations={...e,transientAngleOfRotation:null})};get hitCounter(){return this._hitCounter}}class w{constructor(t,e){this.fleet=t,this.version=e}static createFleet(t){const e={};for(const[n,i]of Object.entries(t))i&&y(n)&&(e[n]=new S(i.type,i.version));return e}static createHasbroFleet(){return new w(w.createFleet({carrier:{type:h.Carrier,version:2002},battleship:{type:h.Battleship,version:2002},destroyer:{type:h.Destroyer,version:2002},submarine:{type:h.Submarine,version:2002},patrolBoat:{type:h.PatrolBoat,version:2002}}),2002)}static createMBFleet(){return new w(w.createFleet({carrier:{type:h.Carrier,version:1990},battleship:{type:h.Battleship,version:1990},cruiser:{type:h.Cruiser,version:1990},submarine:{type:h.Submarine,version:1990},destroyer:{type:h.Destroyer,version:1990}}),1990)}getShip(t){const e=this.fleet[t];if(!e)throw new Error(`Invalid Command: Ship of type ${t} not found in fleet.`);return e}}class v{static vacant=Symbol("VC");_boardSize=10;_fillValue=v.vacant;constructor(){this._board=Array.from({length:this._boardSize},(()=>Array(this._boardSize).fill(this._fillValue)))}get board(){return this._board}get boardSize(){return this._boardSize}get fillValue(){return this._fillValue}}function B([t,e],n,i){return{bow:[t,e],stern:"horizontal"===n?[t+i-1,e]:[t,e+i-1]}}const P=(t,e)=>t>=0&&t<e,E=(t,e)=>t.every((t=>P(t,e))),A=(t,n)=>e(t.bow,n.bow)&&e(t.stern,n.stern);class T{constructor(t){this.playerState=t}getValidPositions({orientation:t,shipLength:e}){return function({shipLength:t,orientation:e,battleshipBoardBuilder:n}){const i=(t,e,n)=>"horizontal"===e?n[t]:n.map((e=>e[t])),r=(t,e,i,r)=>{let a=0,o=[];for(let s=0;s<t.length;s++)if(t[s]===n.fillValue){if(a++,a>=r){const t=e?[s-(r-1),i]:[i,s-(r-1)],n=e?[s,i]:[i,s];o.push({bow:t,stern:n})}}else a=0;return o},a={},o=n.board,s="horizontal"===e;for(let n=0;n<o.length;n++){const l=r(i(n,e,o),s,n,t);a[s?`row-${n}`:`column-${n}`]=l}return a}({orientation:t,shipLength:e,battleshipBoardBuilder:this.playerState.gameboardBuilder,battleshipBoardController:this})}getAllValidBowCoordinates(t,e){let n=new Set;const i=this.getValidPositions({orientation:t,shipLength:e});for(const t of Object.values(i)){if(r=t,!Array.isArray(r)||!r.every((t=>m(t))))throw new Error(`Expected each value of validPositions to be an array of IPosition objects, but received: ${typeof t}.`);t.forEach((t=>n.add(t.bow)))}var r;return n}movePiece(t,e){if(!t.isPlaced())return void console.warn(`Invalid Command: The ${t.type} has not been placed.`);const n=t.currentplacementConfigurations.orientation,i=B(e,n,t.length);if(r=i,a=this.playerState.gameboardBuilder.boardSize,!E(r.bow,a)||!E(r.stern,a))return void console.warn(`Invalid Command: Position - Bow: [${i.bow}] & Stern: [${i.stern}] is out of bounds for the ${t.type}.`);var r,a;const o=this.getValidPositions({orientation:n,shipLength:t.length}),s="horizontal"===n,[l,h]=e,d=function(t,e){return e?`row-${t}`:`column-${t}`}(s?h:l,s),c=o[d].some((t=>A(t,i)));if(c){const i={ship:t,coordinates:e,orientation:n},r=!0;this.relocateShip(t,i,r)}else console.warn(`Invalid Command: Position - Bow: [${i.bow}] & Stern: [${i.stern}] is unavailable for the ${t.type}.`)}placePiece({ship:t,coordinates:e,orientation:n}){!function({ship:t,coordinates:e,orientation:n,battleshipBoardController:i,battleshipBoardBuilder:r,battleshipBoardRepository:a}){const o=t.length,[s,h]=e,d="horizontal"===n;if(!P((d?s:h)+o-1,r.boardSize)){const i=`Invalid Command: The ship placement attempt with the following configurations is out of bounds - Coordinates: ${e}, Length: ${t.length}, Orientation: ${n}.`;throw new Error(i)}if(t.isPlaced())return void console.warn(`Invalid Command: The ${t.type} has already been placed.`);const c=B(e,n,o);if(!((t,e,n)=>i.getValidPositions(e)[n].some((e=>A(t,e))))(c,{shipLength:o,orientation:n},d?`row-${h}`:`column-${s}`)){const t=`Invalid Command: "${JSON.stringify(c)}" is unavailable for ship with Size: ${o} and Orientation: ${n}.`;throw new Error(t)}{const e=(t,e)=>{const n=[],[i,r]=t.bow,[a,o]=t.stern,s=e?r:i,l=e?a:o;for(let t=e?i:r;t<=l;t++)n.push(e?[t,s]:[s,t]);return n},i=(t,e)=>{const n=r.board,i=t.symbol;e.forEach((t=>{const[e,r]=t;n[r][e]=i}))},o=(t,e,n)=>{const i={coordinatesArray:e,orientation:n};t.currentplacementConfigurations=i,Object.values(t.rotationalPivotConfigurations).every((t=>null===t))&&(t.rotationalPivotConfigurations={...i,transientAngleOfRotation:l.Degrees0})},s=(t,e)=>{a.addShipToFleetCoordinates(t,e)},h=e(c,d);i(t,h),o(t,h,n),s(t.type,h)}}({ship:t,coordinates:e,orientation:n,battleshipBoardController:this,battleshipBoardBuilder:this.playerState.gameboardBuilder,battleshipBoardRepository:this.playerState.gameboardRepository}),this.setFleetRotatedPlacePieceParams(this.playerState.fleetBuilder.fleet)}prettyPrint(){console.table(this.playerState.gameboardBuilder.board.map((t=>t.map((t=>"VC"===t.description?null:t.description)))))}receiveAttack(t){const e=this.getShipAt(t);if(null===e)return{hit:!1};e.hit();const n={hit:!0,isSunk:!e.isSeaworthy(),type:e.type};if(!y(n.type))throw new Error("Invalid ship type");return n.hit&&n.isSunk&&this.playerState.gameboardRepository.addSunkenShip(n.type),n}removePiece(t,e=!0){this.isShipValidForRemoval(t)&&((t=>{t.forEach((([t,e])=>{this.playerState.gameboardBuilder.board[e][t]=this.playerState.gameboardBuilder.fillValue}))})(t.currentplacementConfigurations.coordinatesArray),(t=>{this.playerState.gameboardRepository.nullifyShipCoordinatesValue(t)})(t.type),((t,e)=>{e&&this.playerState.gameboardRepository.nullifyShipValidRotationalParams(t.type),t.resetConfigurations(e)})(t,e))}removeAllPieces(t){if(Object.keys(t).length)for(const e of Object.values(t))this.removePiece(e);else console.error("Invalid Command: No ships to remove - Fleet is empty or uninitialized.")}rotatePiece(t){const e=(t,e)=>{const n=t.rotationalPivotConfigurations.transientAngleOfRotation,i=(t=>Array.from(t.keys()).pop()??l.Degrees0)(e);if(n===i){const e=t.rotationalPivotConfigurations.coordinatesArray[0],n=t.rotationalPivotConfigurations.orientation;return t.rotationalPivotConfigurations.transientAngleOfRotation=l.Degrees0,{ship:t,coordinates:e,orientation:n}}const r=((t,e)=>{if(null==e)throw new Error("Current angle doesn't exist");return Array.from(t.keys()).find((t=>t>e))??l.Degrees0})(e,n),a=e.get(r);return t.rotationalPivotConfigurations.transientAngleOfRotation=r,{ship:t,coordinates:a.coordinates,orientation:a.orientation}},n=this.playerState.gameboardRepository.inBoundRotationalPlacePieceForFleet[t.type],i=t.rotationalPivotConfigurations.transientAngleOfRotation,r=(n=>{let r=e(t,n);for(;t.rotationalPivotConfigurations.transientAngleOfRotation!==i&&!this.isRotatedPositionValid(r.coordinates,r.orientation,t.rotationalPivotConfigurations.transientAngleOfRotation,t.length);)r=e(t,n);return r})(n);t.rotationalPivotConfigurations.transientAngleOfRotation!==i?this.relocateShip(t,r,!1):console.warn("No valid rotational position found.")}areCoordinatesVacant(t){const[e,n]=t;return this.playerState.gameboardBuilder.board[n][e]===this.playerState.gameboardBuilder.fillValue}getShipAt(t){if(this.areCoordinatesVacant(t))return null;const e=this.playerState.gameboardBuilder.board,[n,i]=t,r=e[i][n],a=this.getShipTypeFromSymbol(r);return this.playerState.fleetBuilder.getShip(a)}getShipTypeFromSymbol=t=>{if("string"!=typeof(e=t.description)||!["CA","BS","CR","SB","DD","PB"].includes(e))throw new Error("Invalid ship symbol description");var e;switch(t.description){case"CA":return h.Carrier;case"DD":return h.Destroyer;case"SB":return h.Submarine;case"BS":return h.Battleship;case"CR":return h.Cruiser;case"PB":return h.PatrolBoat;default:throw new Error("The symbol description does not return valid ship type.")}};isRotatedPositionValid=([t,e],n,i,r)=>{const a="horizontal"===n,o=this.playerState.gameboardBuilder.boardSize,s=this.playerState.gameboardBuilder.board,h=this.playerState.gameboardBuilder.fillValue,d=a?t:e;let c,u;if(!a&&i===l.Degrees90||a&&i===l.Degrees270||i===l.Degrees0?(c=1,u=r):(c=0,u=r-1),d+r-1>=o)return!1;for(;c<u;c++)if((a?s[e][t+c]:s[e+c][t])!==h)return!1;return!0};getRotatedPlacePieceParams(t){const e=(t,e)=>t-(e-1),n=(t,e)=>e?t===l.Degrees180?"horizontal":"vertical":t===l.Degrees180?"vertical":"horizontal",i=(n,i,[a,o])=>{if(n===l.Degrees0||n===l.Degrees90&&i||n===l.Degrees270&&!i)return r;const s=i?n===l.Degrees180?[e(a,t.length),o]:[a,e(o,t.length)]:n===l.Degrees180?[a,e(o,t.length)]:[e(a,t.length),o];return E(s,this.playerState.gameboardBuilder.boardSize)?s:"outOfBounds"},r=t.rotationalPivotConfigurations.coordinatesArray[0],a=t.rotationalPivotConfigurations.orientation,o=((t,e)=>{const r="horizontal"===e,a={};return[l.Degrees0,l.Degrees90,l.Degrees180,l.Degrees270].forEach((o=>{const s=o===l.Degrees0?t:i(o,r,t);a[o]="outOfBounds"===s?"outOfBounds":{coordinates:s,orientation:o===l.Degrees0?e:n(o,r)}})),a})(r,a),s=(t=>{const e=new Map;for(const i of Object.keys(t)){const r=+i;if(n=r,!Object.values(l).includes(n))throw new Error(`Invalid Type: "${i}" doesn't conform to "AngleOfRotation".`);const a=t[r];if(!g(a)&&!p(a))throw new Error(`Invalid Type: "${a}" doesn't conform to "RotatedPlacePieceParams".`);if(!g(a))continue;const{coordinates:o,orientation:s}=a,h={coordinates:o,orientation:s};e.set(r,h)}var n;return e})(o);return s}isShipValidForRemoval(t){return!(!t.currentplacementConfigurations.coordinatesArray||!this.playerState.gameboardRepository.isShipPlaced(t.type))||(console.error(`Error removing ship: ${t.type} is missing coordinates or not in the fleet.`),!1)}relocateShip(t,e,n){this.removePiece(t,n),this.placePiece(e)}setFleetRotatedPlacePieceParams(t){for(const e of Object.values(t))e.isPlaced()&&this.setShipRotatedPlacePieceParams(e)}setShipRotatedPlacePieceParams(t){const e=this.getRotatedPlacePieceParams(t);this.playerState.gameboardRepository.setShipValidRotationalParams(t,e)}}class R{#t={};#e={};#n=new Set;#i=new Set;get fleetCoordinates(){return this.#t}get inBoundRotationalPlacePieceForFleet(){return console.log(this.#e),this.#e}addAttackedCoordinates(t){this.#n.add(`[${t[0]}, ${t[1]}]`)}addShipToFleetCoordinates(t,e){this.fleetCoordinates[t]||(this.fleetCoordinates[t]=new Set),e.forEach((e=>{const[n,i]=e,r=`[${n}, ${i}]`;this.fleetCoordinates[t].add(r)}))}addSunkenShip(t){this.#i.add(t)}areAllShipsSunk(){return this.#i.size===Object.keys(this.fleetCoordinates).length}isShipPlaced(t){return null!==this.fleetCoordinates[t]}nullifyShipCoordinatesValue(t){this.fleetCoordinates[t]=null}nullifyShipValidRotationalParams(t){this.inBoundRotationalPlacePieceForFleet[t]=null}setShipValidRotationalParams(t,e){this.#e[t.type]||(this.#e[t.type]=e)}hasTargetBeenAttacked(t){return this.#n.has(`[${t[0]}, ${t[1]}]`)}}const L=(t=2002)=>{const e=new v,n=new R,i=2002===t?w.createHasbroFleet():w.createMBFleet();return{gameboardBuilder:e,gameboardRepository:n,fleetBuilder:i,gameboardController:new T({gameboardBuilder:e,gameboardRepository:n,fleetBuilder:i})}},$={player:L(),opponent:L()};class k{dialogState={isDialogOpen:!1,isEscapeKeyListenerAttached:!1,isCloseButtonListenerAttached:!1};constructor(t,e="ds-close-button",n=!0){if(this.dialogElement=t,this.dialogCloseButtonID=e,this.dialogInDocumentBody=n,!this.dialogElement.id)throw new Error("Dialog element must have an id.");this.dialogId=this.dialogElement.id,this.dialogCloseButton=this.dsGetCloseButton(this.dialogCloseButtonID,this.dialogId),this.dsAddCloseButtonAria(this.dialogCloseButton),this.closeButtonListener=this.closeLightbox.bind(this),this.escapeKeyListener=this.dsHandleEscapeKey.bind(this),this.observeDialogRemoval()}openLightbox(){this.dialogState.isDialogOpen||(this.dialogElement.showModal(),this.dsAddListeners(),this.dialogState.isDialogOpen=!0)}closeLightbox(){requestAnimationFrame((()=>{this.dialogElement.classList.add("closing")})),this.dialogElement.addEventListener("animationend",(()=>{this.dialogElement.classList.remove("closing"),this.dialogElement.close(),this.dsRemoveListeners(),this.dialogState.isDialogOpen=!1}),{once:!0})}isOpen(){return this.dialogState.isDialogOpen}dsAddListeners(){this.dialogState.isCloseButtonListenerAttached||(this.dialogCloseButton.addEventListener("click",this.closeButtonListener),this.dialogState.isCloseButtonListenerAttached=!0),this.dialogState.isEscapeKeyListenerAttached||(window.addEventListener("keydown",this.escapeKeyListener),this.dialogState.isEscapeKeyListenerAttached=!0)}dsRemoveListeners(){this.dialogCloseButton.removeEventListener("click",this.closeButtonListener),this.dialogState.isCloseButtonListenerAttached=!1,window.removeEventListener("keydown",this.escapeKeyListener),this.dialogState.isEscapeKeyListenerAttached=!1}dsGetCloseButton(t,e){const n=this.dialogElement.querySelector(`#${t}`);if(!n)throw new Error(`Close button with ID "${t}" not found in dialog "${e}".`);return n}dsAddCloseButtonAria(t){t.setAttribute("aria-label","Close Dialog")}dsHandleEscapeKey(t){"Escape"===t.key&&this.dialogState.isDialogOpen&&(t.preventDefault(),this.closeLightbox())}observeDialogRemoval(){const t=new MutationObserver((e=>{for(const n of e)Array.from(n.removedNodes).forEach((e=>{if(e===this.dialogElement)return this.dsRemoveListeners(),void t.disconnect()}))}));this.dialogInDocumentBody?t.observe(document.body,{childList:!0}):t.observe(document.body,{childList:!0,subtree:!0})}}function D(t,e){for(const n in e)t.setAttribute(n,e[n])}function x(t){const e=a("h2");e.textContent="Parabellum";const n=a("div",["parabellum"],{id:"main-container-one-parabellum"});n.append(e),t.render(n);const i=new DocumentFragment;return i.append(n),i}function I(t){a("h2").textContent="Parabellum";const e=a("h3");e.textContent="Situation Report:";const n=a("div",["bellum"],{id:"main-container-one-bellum"});n.append(e,t.element);const i=new DocumentFragment;return i.appendChild(n),i}function F(){const t=a("div",["bellum"],{id:"main-container-one-post-bellum"}),e=new DocumentFragment;return e.appendChild(t),e}class O{#r;constructor(t,e,n,i=[],r={}){if(this.elementTag=t,this.fragments=e,this.initialFragmentKey=n,this.classNames=i,this.attributes=r,!e[n])throw new Error(`Initial fragment with key "${n}" does not exist.`);this.hotSwapContainer=a(this.elementTag,this.classNames,this.attributes),this.fragmentsArray=Object.values(this.fragments),this.#r=this.setInitialIndex(this.fragmentsArray,this.fragments,this.initialFragmentKey),this.hotSwapContainer.appendChild(this.fragments[this.initialFragmentKey])}render(t){t.appendChild(this.hotSwapContainer)}swapFragmentByKey(t){const e=this.getFragment(t);this.swapFragment(e),this.#r=this.fragmentsArray.indexOf(e)}swapByOrder(){this.#r=(this.#r+1)%this.fragmentsArray.length,this.swapFragment(this.fragmentsArray[this.#r])}setInitialIndex(t,e,n){const i=t.indexOf(e[n]);if(-1===i)throw new Error(`Initial fragment with key "${n}" does not exist.`);return i}getFragment(t){const e=this.fragments[t];if(!e)throw new Error(`Fragment with key "${t}" does not exist.`);return e}swapFragment(t){this.hotSwapContainer.replaceChildren(t)}}class G{id="player";fleetElements=new Map;listenersAdded=!1;dragState={currentShipInstance:null,initialPlacementConfigurations:null,isValidDropTarget:!1,currentDragOverCell:null,cloneSnapOffset:null,shipBorderValueSplit:null};dragEventCallbacks={dragstart:t=>this.handleShipDragStart(t,this.dragState),drag:t=>this.handleShipDrag(t,this.dragState),dragenter:t=>this.handleShipDragEnter(t),dragleave:t=>this.handleShipDragLeave(t),dragover:t=>this.handleShipDragOver(t,this.dragState),drop:t=>this.handleShipDrop(t,this.dragState),dragend:t=>this.handleShipDragEnd(t,this.dragState)};constructor(t,e){this.playerState=t,this.gameState=e,this.gameboardContainer=this.generateBoardContainer(this.playerState.gameboardBuilder.boardSize),this.gameboard=this.generateBoardFragment(this.playerState.gameboardBuilder.boardSize),this.dragImage=this.createDragImage(),this.shipDragClone=this.createShipDragClone(),this.gameState.eventBus.on("refreshGameboard",this.refreshGameboardWrapper),this.gameState.eventBus.on("toggleActiveGameboard",this.toggleActive),this.gameState.eventBus.on("billowAttack",this.receiveAttack)}render(t){if(!t)throw new Error(`Target element not found with ID - ${this.id} and selector - "${t}".`);this.gameboardContainer.append(this.dragImage,this.shipDragClone,this.gameboard),this.handleFleetPlacement(this.playerState.fleetBuilder,this.fleetElements),this.toggleParabellumListeners(),t.appendChild(this.gameboardContainer)}toggleParabellumListeners(){if(!this.gameboardContainer)return;const t=this.listenersAdded?"removeEventListener":"addEventListener";Object.entries(this.dragEventCallbacks).forEach((([e,n])=>{this.gameboardContainer[t](e,n)})),this.gameboardContainer[t]("click",this.handleShipRotation),this.listenersAdded=!this.listenersAdded}togglePlayerTurn(t){const{hit:e,isSunk:n}=t;if(e&&!n||!e)this.gameState.togglePlayerTurn();else if(e&&n&&!this.checkForWin())return void this.gameState.togglePlayerTurn()}toggleShipsDraggable(){this.fleetElements.forEach((t=>{t.removeAttribute("draggable")}))}toggleShipAdriftClass(){this.fleetElements.forEach((t=>{t.classList.remove("adrift")}))}applyGridPlacementValue(t,e,n,i,r){"horizontal"===i?(n.style.gridColumn=t,n.style.gridRow=e.toString(),n.style.gridTemplateColumns=`repeat(${r}, 1fr)`):(n.style.gridRow=t,n.style.gridColumn=e.toString(),n.style.gridTemplateRows=`repeat(${r}, 1fr)`)}checkForWin(){return!!this.playerState.gameboardRepository.areAllShipsSunk()&&(alert(("player"===this.gameState.currentPlayer?"You win":"You lose")+" mother fucker! #TYPESHIT"),this.gameState.transitionToNextPhase(),!0)}createDragImage(){return a("img",["drag-image","accessibility"],{id:`${this.id}-drag-image`,src:"https://cyclone-studios.s3.us-east-2.amazonaws.com/s3_misc-images/1x1_transparent.png"})}createShipDragClone(){return a("div",["ship-container-clone"],{id:`${this.id}-ship-drag-clone`})}createBackgroundCellsFragment(t){const e=new DocumentFragment;return t.forEach(((t,n)=>{t.forEach(((t,i)=>{const r=t.description.toLowerCase(),o=a("div",[`${this.id}-${r}-cell`,`player-${r}-cell`,"grid-cell"],{"data-x":i.toString(),"data-y":n.toString(),"aria-label":`Row ${n+1}, Column ${i+1}`,role:"gridCell"}),s=a("div",[`${this.id}-${r}-grid-cell-container`,"grid-cell-container"]);s.appendChild(o),e.appendChild(s)}))})),e}createShipElement(t,e,n,i,r){const o=this.generateShipUnitFragment(e,t,r,this.id),s=a("div",["ship-container","adrift"],{id:`${this.id}-${t}-container`,"data-dragging":"false","data-length":e.toString(),"data-orientation":r,"data-shipType":t,draggable:"true"});return s.appendChild(o),this.applyGridPlacementValue(n,i,s,r,e),s}generateBoardContainer(t){const e=a("section",["gameboard-container"],{id:`${this.id}-gameboard-container`});return e.style.setProperty("--grid-size",t.toString()),e}generateBoardFragment(t){const e=a("div",["gameboard-background"],{id:`${this.id}-gameboard-background`});e.appendChild(this.createBackgroundCellsFragment(this.playerState.gameboardBuilder.board));const n=a("div",["gameboard"],{id:`${this.id}-gameboard`});n.style.setProperty("--grid-size",t.toString());const i=new DocumentFragment;return i.append(e,n),i}generateShipUnitFragment(t,e,n,i){const r=new DocumentFragment;for(let o=0;o<t;o++){const s=0===o,l=o===t-1,h=a("div",["ship-unit",`${e}-unit`,`${i}-${e}-unit`]);"horizontal"===n?h.classList.add("ship-unit-horizontal"):h.classList.add("ship-unit-vertical"),s&&(h.classList.add("ship-bow"),h.setAttribute("id",`${i}-${e}-bow`)),l&&(h.classList.add("ship-stern"),h.setAttribute("id",`${i}-${e}-stern`)),r.appendChild(h)}return r}getAndSetGridPlacementValue(t,e,n,i){const[r,a]=this.getGridPlacementValue(e,n,i);this.setGridPlacementValue(r,a,t,n,i)}getGridPlacementValue(t,e,n){const i="horizontal"===e,[r,a]=t;return[`${i?r+1:a+1} / span ${n}`,i?a+1:r+1]}getShipGridPlacementData(t){const e=t.currentplacementConfigurations;if(!e.coordinatesArray||!e.orientation)throw new Error(`The ${t.type} has no placement configurations.`);return{bowCoordinates:e.coordinatesArray[0],orientation:e.orientation,shipLength:t.length}}handleFleetPlacement(t,e){this.updateFleetElements(t),this.placeFleetOnGameboard(e)}async handleShipUnitCooked(t){const e=Array.from(t.children);e.forEach(((t,e)=>{setTimeout((()=>{t.classList.add("cooked")}),333*(e+1))}));const n=e[e.length-1];await o(n)}hasTargetBeenAttacked(t){const e=this.playerState.gameboardRepository.hasTargetBeenAttacked(t);return e||this.playerState.gameboardRepository.addAttackedCoordinates(t),e}placeFleetOnGameboard(t){const e=this.gameboardContainer.querySelector(".gameboard");if(!e)throw new Error("Gameboard container not found.");t.forEach((t=>e.appendChild(t)))}_receiveAttack=async t=>{const e=`[data-x="${t[0]}"][data-y="${t[1]}"]`,n=this.gameboardContainer.querySelector(e);if(!n)throw new Error("Grid cell not found.");if(n.style.backgroundColor="red",this.hasTargetBeenAttacked(t))return console.warn("Cell has already been attacked:",t),{hit:!1};const i=this.playerState.gameboardController.receiveAttack(t);return this.gameState.toggleActiveGameboard(),await this.triggerPrePlayerToggleAnimations(i,n),this.togglePlayerTurn(i),i};receiveAttack=async t=>await this._receiveAttack(t);refreshGameboard(t){const e=t.querySelector(`#${this.id}-gameboard`),n=t.querySelector(`#${this.id}-gameboard-background`);if(!e||!n)throw new Error("Missing gameboard and/or gameboard background elements");this.gameboardContainer.removeChild(e),this.gameboardContainer.removeChild(n),this.shipDragClone.classList.remove("visible"),this.gameboard=this.generateBoardFragment(this.playerState.gameboardBuilder.boardSize),this.gameboardContainer.appendChild(this.gameboard),this.handleFleetPlacement(this.playerState.fleetBuilder,this.fleetElements)}refreshGameboardWrapper=()=>{this.refreshGameboard(this.gameboardContainer)};setGridPlacementValue(t,e,n,i,r){"horizontal"===i?(n.style.gridColumn=t,n.style.gridRow=e.toString(),n.style.gridTemplateColumns=`repeat(${r}, 1fr)`):(n.style.gridRow=t,n.style.gridColumn=e.toString(),n.style.gridTemplateRows=`repeat(${r}, 1fr)`)}setFleetElements=(t,e,n,i,r)=>{const a=this.createShipElement(t,e,n,i,r);this.fleetElements.set(t,a)};sinkShip=async t=>{t.classList.add("sunk"),await s(t,"animationend"),await this.handleShipUnitCooked(t),await n(1e3)};toggleActive=t=>{this.gameboardContainer.style.pointerEvents="opponent"===t?"none":"auto"};triggerPrePlayerToggleAnimations=async(t,e)=>{t.isSunk?(this.gameState.eventBus.emit("setAndScrollToNextSitRep",t),await this.updateGameboardPostAttack(t,e)):(this.updateGameboardPostAttack(t,e),await this.gameState.eventBus.emit("setAndScrollToNextSitRep",t))};updateFleetElements=t=>{this.fleetElements.size&&this.fleetElements.clear();for(const e of Object.values(t.fleet)){const t=e.type,n=e.length,i=e.currentplacementConfigurations.orientation;if(!i)throw new Error("Orientation not set.");const r=e.currentplacementConfigurations.coordinatesArray;if(!r||0===r.length){console.error(`The ${t} has not been placed. Continuing...`);continue}const a=r[0],[o,s]=this.getGridPlacementValue(a,i,n);this.setFleetElements(t,n,o,s,i)}};updateGameboardPostAttack=async(t,e)=>{const{hit:n,isSunk:i,type:r}=t;if(n||e.classList.add("miss"),n&&!i&&e.classList.add("hit"),n&&i){if(!y(r))throw new Error(`The ${r} is not a valid ship type.`);e.classList.add("hit");const t=this.playerState.fleetBuilder.getShip(r),{bowCoordinates:n,orientation:i,shipLength:a}=this.getShipGridPlacementData(t);if(!this.fleetElements.has(t.type))throw new Error(`The ${t.type} has no fleet element.`);const o=this.fleetElements.get(t.type);if(!o)throw new Error(`The ${t.type} has no fleet element.`);this.getAndSetGridPlacementValue(o,n,i,a),await this.sinkShip(o)}};handleShipDragStart(t,n){if(!(t.target instanceof HTMLDivElement&&t.target.matches(".ship-container")))return;const r=t.target,a=i(r,"data-orientation",u),o=this.playerState.fleetBuilder.fleet,s=i(r,"data-shiptype",y),l=((t,e,n)=>{const i=(t=>{const e=t.querySelector(".ship-bow");if(!e)throw new Error("Ship bow not found.");return e})(t),r=getComputedStyle(document.documentElement).getPropertyValue("--ship-container-border-size").trim().match(/^(?<numberValue>\d+(\.\d+)?)(?<unitType>[a-z%]+)$/i);if(!r||!r.groups)throw new Error("No matches found when parsing");const a=r.groups;n.shipBorderValueSplit=a;const o="horizontal"===e,[s,l]=o?[i.getBoundingClientRect().width/2,i.getBoundingClientRect().height/2+Number(a.numberValue)]:[i.getBoundingClientRect().width/2+Number(a.numberValue),i.getBoundingClientRect().height/2];return{offsetX:s,offsetY:l}})(r,a,n);if(((t,e,n,i)=>{if(!e[n])throw new Error(`The ${n} is not present in the fleet.`);t.currentShipInstance=e[n],t.initialPlacementConfigurations=t.currentShipInstance.currentplacementConfigurations,t.cloneSnapOffset=i})(n,o,s,l),!n.currentShipInstance)throw new Error(`Drag state hasn't been updated with the current ship instance on drag start. Drag State: ${JSON.stringify(n)}`);this.playerState.gameboardController.removePiece(n.currentShipInstance),t.dataTransfer?.setDragImage(this.dragImage,0,0),((t,e)=>{const n=t.getBoundingClientRect();e.style.height=`${n.height}px`,e.style.width=`${n.width}px`})(r,this.shipDragClone),(t=>{t.setAttribute("data-dragging","true"),t.classList.add("lower-opacity"),setTimeout((()=>{t.style.pointerEvents="none"}),0),this.shipDragClone.classList.add("visible")})(r),((t,n,i,r)=>{const a=Number(n.getAttribute("data-length"));if(!a||"number"!=typeof(o=a)||![2,3,4,5].includes(o))throw new Error("Invalid or missing ship type attribute.");var o;const s=a;((t,n,i)=>{const a=r.getAllValidBowCoordinates(i,n);t.forEach((t=>{const n=[Number(t.getAttribute("data-x")),Number(t.getAttribute("data-y"))];for(const i of a)e(i,n)&&t.classList.add("valid-bow-coordinates")}))})(t.querySelectorAll(".grid-cell"),s,i)})(this.gameboardContainer,r,a,this.playerState.gameboardController),this.snapCloneToCursor(t,l)}handleShipDrag(t,e){if(!(t.target instanceof HTMLDivElement&&t.target.matches(".ship-container")))return;const n=e.cloneSnapOffset;if(!n)throw new Error("An error has occured during the `cloneSnapOffset` reading.");this.snapCloneToCursor(t,n)}handleShipDragEnter(t){if(!(t.target instanceof HTMLDivElement&&t.target.matches(".grid-cell")))return;const e=t.target,n=e.classList.contains("valid-bow-coordinates");n?e.classList.add("placement-is-valid"):e.classList.add("placement-is-invalid"),n&&this.shipDragClone.classList.add("placement-is-valid")}handleShipDragLeave(t){if(!(t.target instanceof HTMLDivElement&&t.target.matches(".grid-cell")))return;const e=t.target;e.classList.contains("placement-is-valid")?e.classList.remove("placement-is-valid"):e.classList.remove("placement-is-invalid"),this.shipDragClone.classList.contains("placement-is-valid")&&this.shipDragClone.classList.remove("placement-is-valid")}handleShipDragOver(t,e){if(t.preventDefault(),!(t.target instanceof HTMLDivElement&&t.target.matches(".grid-cell")))return;const n=t.target;e.currentDragOverCell=n,n.classList.contains("valid-bow-coordinates")}handleShipDrop(t,e){if(t.preventDefault(),!(t.target instanceof HTMLDivElement&&t.target.matches(".valid-bow-coordinates")))return;const{coordinatesArray:n,orientation:i}=e.initialPlacementConfigurations||{};if(!n||!i)throw new Error("Initial placement configurations are incomplete.");e.isValidDropTarget=!0;const r=t.target,a=r.getAttribute("data-x"),o=r.getAttribute("data-y");if(!a||!o)throw new Error("Missing or invalid grid cell coordinates.");const s=[Number(a),Number(o)];this.playerState.gameboardController.placePiece({ship:e.currentShipInstance,coordinates:s,orientation:i}),this.refreshGameboard(this.gameboardContainer),e.isValidDropTarget=!1}handleShipDragEnd(t,e){if(!(t.target instanceof HTMLDivElement&&t.target.matches(".ship-container")))return;const n=()=>{const{coordinatesArray:t,orientation:n}=e.initialPlacementConfigurations||{};if(!t||!n)throw new Error("Initial placement configurations are incomplete.");const i=t[0];this.playerState.gameboardController.placePiece({ship:e.currentShipInstance,coordinates:i,orientation:n})},i=(t,e,n)=>{const i=n?"placement-is-valid":"placement-is-invalid";t.setAttribute("data-dragging","false"),e.classList.remove(i),t.classList.remove("lower-opacity"),this.shipDragClone.classList.remove("visible"),t.style.pointerEvents="auto"},r=t.target;try{const{currentDragOverCell:t,isValidDropTarget:a}=e;if(!t)throw new Error(`Current drag over cell is missing. Drag state: ${JSON.stringify(e)}`);i(r,t,a),a||n()}catch(t){console.error(t)}}handleShipRotation=t=>{if(!(t.target instanceof HTMLDivElement&&t.target.matches(".ship-container")))return;const e=t.target,n=i(e,"data-shiptype",y),r=this.playerState.fleetBuilder.getShip(n);this.playerState.gameboardController.rotatePiece(r),this.refreshGameboard(this.gameboardContainer)};snapCloneToCursor(t,e){const n=this.gameboardContainer.getBoundingClientRect(),i=n.left,r=n.top,a=t.clientX,o=t.clientY,{offsetX:s,offsetY:l}=e;document.documentElement.style.setProperty("--ship-clone-left",a-i-s+"px"),document.documentElement.style.setProperty("--ship-clone-top",o-r-l+"px")}getId(){return this.id}}class N{id="opponent";fleetElements=new Map;listenersAdded=!1;constructor(t,e){this.playerState=t,this.gameState=e,this.gameboardContainer=this.generateBoardContainer(this.playerState.gameboardBuilder.boardSize),this.updateFleetElements(this.playerState.fleetBuilder),this.gameState.eventBus.on("toggleActiveGameboard",this.toggleActive)}render(t){if(!t)throw new Error(`Target element not found with ID - ${this.id} and selector - "${t}".`);const e=this.generateBoardFragment(this.playerState.gameboardBuilder.boardSize);this.gameboardContainer.appendChild(e),this.placeFleetOnGameboard(this.fleetElements),this.toggleBellumListeners(),t.appendChild(this.gameboardContainer)}toggleBellumListeners(){if(!this.gameboardContainer)return;const t=this.listenersAdded?"removeEventListener":"addEventListener";this.gameboardContainer[t]("click",this.handleCellClick),this.listenersAdded=!this.listenersAdded}checkForWin(){return!!this.playerState.gameboardRepository.areAllShipsSunk()&&(alert(("player"===this.gameState.currentPlayer?"You win":"You lose")+" mother fucker! #TYPESHIT"),this.gameState.transitionToNextPhase(),!0)}createBackgroundCellsFragment(t){const e=new DocumentFragment;return t.forEach(((t,n)=>{t.forEach(((t,i)=>{const r=a("div",[`${this.id}-hit-marker`,"hit-marker"]),o=a("div",[`${this.id}-grid-cell`,"grid-cell"],{"data-x":i.toString(),"data-y":n.toString(),"aria-label":`Row ${n+1}, Column ${i+1}`,role:"gridCell"});o.appendChild(r);const s=a("div",[`${this.id}-grid-cell-container`,"grid-cell-container"]);s.appendChild(o),e.appendChild(s)}))})),e}createShipElement(t,e,n){const i=this.generateShipUnitFragment(e,t,n,this.id),r=a("div",["opponent-ship-container"],{id:`${this.id}-${t}-container`});return r.appendChild(i),r}generateBoardContainer(t){const e=a("div",["gameboard-container"],{id:`${this.id}-gameboard-container`});return e.style.setProperty("--grid-size",t.toString()),e}generateBoardFragment(t){const e=a("div",["gameboard-background"],{id:`${this.id}-gameboard-background`});e.appendChild(this.createBackgroundCellsFragment(this.playerState.gameboardBuilder.board));const n=a("div",["gameboard"],{id:`${this.id}-gameboard`});n.style.setProperty("--grid-size",t.toString()),this.fleetElements.forEach((t=>{n.appendChild(t)}));const i=new DocumentFragment;return i.append(e,n),i}generateShipUnitFragment(t,e,n,i){const r=new DocumentFragment;for(let o=0;o<t;o++){const s=0===o,l=o===t-1,h=a("div",["ship-unit",`${e}-unit`,`${i}-${e}-unit`]);"horizontal"===n?h.classList.add("ship-unit-horizontal"):h.classList.add("ship-unit-vertical"),s&&(h.classList.add("ship-bow"),h.setAttribute("id",`${i}-${e}-bow`)),l&&(h.classList.add("ship-stern"),h.setAttribute("id",`${i}-${e}-stern`)),r.appendChild(h)}return r}getAndSetGridPlacementValue(t,e,n,i){const[r,a]=this.getGridPlacementValue(e,n,i);this.setGridPlacementValue(r,a,t,n,i)}getAttackCoordinates(t){const e=t.getAttribute("data-x"),n=t.getAttribute("data-y");if(null==e||null==n)throw new Error("Could not retrieve coordinates from grid cell.");return[+e,+n]}getGridPlacementValue(t,e,n){const i="horizontal"===e,[r,a]=t;return[`${i?r+1:a+1} / span ${n}`,i?a+1:r+1]}getShipGridPlacementData(t){const e=t.currentplacementConfigurations;if(!e.coordinatesArray||!e.orientation)throw new Error(`The ${t.type} has no placement configurations.`);return{bowCoordinates:e.coordinatesArray[0],orientation:e.orientation,shipLength:t.length}}async receiveAttack(t){if(!(t.target instanceof HTMLDivElement&&t.target.matches(".grid-cell")))return;const e=t.target,n=this.getAttackCoordinates(e);if(this.hasTargetBeenAttacked(n))return;this.gameState.toggleActiveGameboard();const i=this.playerState.gameboardController.receiveAttack(n);try{await this.triggerPrePlayerToggleAnimations(i,e)}catch(t){console.error("Animatiwhat on failed",t)}this.togglePlayerTurn(i)}handleCellClick=t=>{this.receiveAttack(t)};async handleShipUnitCooked(t){const e=Array.from(t.children);e.forEach(((t,e)=>{setTimeout((()=>{t.classList.add("cooked")}),333*(e+1))}));const n=e[e.length-1];await o(n)}hasTargetBeenAttacked(t){const e=this.playerState.gameboardRepository.hasTargetBeenAttacked(t);return e||this.playerState.gameboardRepository.addAttackedCoordinates(t),e}placeFleetOnGameboard(t){const e=this.gameboardContainer.querySelector(".gameboard");if(!e)throw new Error("Gameboard container not found.");t.forEach((t=>e.appendChild(t)))}setGridPlacementValue(t,e,n,i,r){"horizontal"===i?(n.style.gridColumn=t,n.style.gridRow=e.toString(),n.style.gridTemplateColumns=`repeat(${r}, 1fr)`):(n.style.gridRow=t,n.style.gridColumn=e.toString(),n.style.gridTemplateRows=`repeat(${r}, 1fr)`)}sinkShip=async t=>{t.classList.add("sunk"),await s(t,"animationend"),await this.handleShipUnitCooked(t),await n(1e3)};toggleActive=t=>{this.toggleBellumListeners(),this.gameboardContainer.style.pointerEvents="player"===t?"none":"auto"};togglePlayerTurn(t){const{hit:e,isSunk:n}=t;if(e&&!n||!e)this.gameState.togglePlayerTurn();else if(e&&n&&!this.checkForWin())return void this.gameState.togglePlayerTurn()}triggerPrePlayerToggleAnimations=async(t,e)=>{t.isSunk?(this.gameState.eventBus.emit("setAndScrollToNextSitRep",t),await this.updateGameboardPostAttack(t,e)):(this.updateGameboardPostAttack(t,e),await this.gameState.eventBus.emit("setAndScrollToNextSitRep",t))};updateFleetElements(t){const e=t.fleet;for(const t of Object.values(e)){const e=t.type,n=t.length,i=t.currentplacementConfigurations.orientation;if(!i)throw new Error("Orientation not set.");const r=t.currentplacementConfigurations.coordinatesArray;if(!r||0===r.length){console.error(`The ${e} has not been placed. Continuing...`);continue}const a=this.createShipElement(e,n,i);this.fleetElements.set(e,a)}}updateGameboardPostAttack=async(t,e)=>{const{hit:n,isSunk:i,type:r}=t;if(n||e.classList.add("miss"),n&&!i&&e.classList.add("hit"),n&&i){if(!y(r))throw new Error(`The ${r} is not a valid ship type.`);e.classList.add("hit");const t=this.playerState.fleetBuilder.getShip(r),{bowCoordinates:n,orientation:i,shipLength:a}=this.getShipGridPlacementData(t);if(!this.fleetElements.has(t.type))throw new Error(`The ${t.type} has no fleet element.`);const o=this.fleetElements.get(t.type);if(!o)throw new Error(`The ${t.type} has no fleet element.`);this.getAndSetGridPlacementValue(o,n,i,a),await this.sinkShip(o)}};getId(){return this.id}}class z{constructor(t,e){this.gameState=e,this.playerGameboardComponent=new G(t.player,this.gameState),this.opponentGameboardComponent=new N(t.opponent,this.gameState),this.mainContainerTwo=a("section",["main-container"],{id:"main-container-two"})}get element(){return this.mainContainerTwo}get playerGameboard(){return this.playerGameboardComponent}get opponentGameboard(){return this.opponentGameboardComponent}render(t){this.playerGameboardComponent.render(this.mainContainerTwo),this.opponentGameboardComponent.render(this.mainContainerTwo),t.appendChild(this.mainContainerTwo)}}class V{shipShufflerButtonTextContent="Shuffle";buttonClass="ship-shuffler-button";#a=!1;shuffleShips=()=>{this.randomizeGameboard(),this.updateGameboard()};constructor(t,e,n,i){this.id=t,this.gameboardController=e,this.fleet=n,this.gameState=i,this.shipShufflerButton=this.createshipShufflerButton(`${this.id}-${this.buttonClass}`,[this.buttonClass]),this.shipShufflerButton.classList.add(this.buttonClass),this.shipShufflerButton.textContent=this.shipShufflerButtonTextContent,this.toggleEventListener(),this.shipShufflerButtonContainer=this.createshipShufflerButtonContainer(),this.shipShufflerButtonContainer.appendChild(this.shipShufflerButton)}render(t){if(!t)throw new Error(`Target element not found. Recieved ${t}.`);t.appendChild(this.shipShufflerButtonContainer)}toggleEventListener(){!0===this.#a?(this.shipShufflerButton.removeEventListener("click",this.shuffleShips),this.#a=!1):(this.shipShufflerButton.addEventListener("click",this.shuffleShips),this.#a=!0)}createshipShufflerButton(t,e){return a("button",[...e],{id:t})}createshipShufflerButtonContainer(){return a("div",["ship-shuffler-button-container"])}randomizeGameboard(){this.gameboardController.removeAllPieces(this.fleet),f(this.gameboardController,this.fleet)}updateGameboard(){this.gameState.eventBus.emit("refreshGameboard")}getId(){return this.id}}class M{readyUpButtonTextContent="Ready Up";buttonId="ready-up-button";#a=!1;readyUp=()=>{this.anchorShips(),this.removeParabellumButtonListeners(),this.transitionToBellum()};constructor(t,e,n,i){this.playerGameboardComponent=t,this.shipShufflerButton=e,this.instructionsButton=n,this.transitionToNextPhase=i,this.readyUpButton=this.createReadyUpButton(this.buttonId),this.toggleEventListener(),this.readyUpButtonContainer=this.createReadyUpButtonContainer(),this.readyUpButtonContainer.appendChild(this.readyUpButton)}render(t){if(!t)throw new Error(`Target element not found. Recieved ${t}.`);t.appendChild(this.readyUpButtonContainer)}toggleEventListener(){!0===this.#a?(this.readyUpButton.removeEventListener("click",this.readyUp),this.#a=!1):(this.readyUpButton.addEventListener("click",this.readyUp),this.#a=!0)}anchorShips(){this.playerGameboardComponent.toggleParabellumListeners(),this.playerGameboardComponent.toggleShipsDraggable(),this.playerGameboardComponent.toggleShipAdriftClass(),this.playerGameboardComponent.gameboardContainer.addEventListener("click",(()=>{et.gameState.toggleActiveGameboard(),et.gameState.togglePlayerTurn()}))}createReadyUpButton(t){const e=a("span",["ready-up-button-text"]);e.textContent=this.readyUpButtonTextContent;const n=a("img",["inactive-ready-up-button"],{alt:"Ready Up (Inactive)",src:"https://cyclone-studios.s3.us-east-2.amazonaws.com/s3_cyclone-studios/assets/images/big-red-button/btn-inactive.svg"}),i=a("img",["active-ready-up-button"],{alt:"Ready Up (Active)",src:"https://cyclone-studios.s3.us-east-2.amazonaws.com/s3_cyclone-studios/assets/images/big-red-button/btn-active.svg"}),r=a("button",[],{id:t});return r.append(i,n,e),r}createReadyUpButtonContainer(){return a("div",["ready-up-button-container"])}removeParabellumButtonListeners(){this.shipShufflerButton.toggleEventListener(),this.instructionsButton.toggleEventListener(),this.toggleEventListener()}transitionToBellum(){this.transitionToNextPhase()}}function U(t,e){const n=a("div",["parabellum"],{id:"main-container-three-parabellum"});t.render(n),e.render(n);const i=new DocumentFragment;return i.appendChild(n),i}function j(){const t=Object.entries($).map((([t,e])=>{if("string"!=typeof(n=t)||"player"!==n&&"opponent"!==n)throw new Error("Invalid player type.");var n;return((t,e)=>{const n=a("h3",["fleet-status-heading"],{id:`${t}-fleet-status-heading`});var i;n.textContent=(i=t).charAt(0).toUpperCase()+i.slice(1).toLowerCase();const r=a("div",["fleet-status-container"],{id:`${t}-fleet-status-container`});return r.appendChild(n),Object.values(e).forEach((e=>{const n=a("div",["hit-counter-container",`${e.type}-hit-counter-container`],{id:`${t}-${e.type}-hit-counter-container`});for(let i=0;i<e.length;i++){const i=a("div",["hitpoint",`${e.type}-hitpoint`,`${t}-${e.type}-hitpoint`]);n.append(i)}r.appendChild(n)})),r})(t,e.fleetBuilder.fleet)})),e=new DocumentFragment;Object.values($.player.fleetBuilder.fleet).map((t=>{const n=a("li",["ship-hit-counter-label"],{id:`${t.type}-hit-counter-label`});n.textContent=t.type,e.appendChild(n)}));const n=a("div",[],{id:"ship-label-list"});n.appendChild(e);const i=a("div",["bellum"],{id:"main-container-three-bellum"}),[r,o]=t;i.append(r,n,o);const s=new DocumentFragment;return s.appendChild(i),s}function H(){const t=a("div",["post-bellum"],{id:"main-container-three-post-bellum"}),e=new DocumentFragment;return e.appendChild(t),e}class K{buttonId="instructions-button";buttonImageId="instructions-image";#a=!1;constructor(t){this.instructionsLightboxController=t,this.instructionsButton=this.createInstructionsButton(),this.instructionsButtonContainer=this.createInstructionsButtonContainer(),this.instructionsButtonContainer.appendChild(this.instructionsButton),this.openInstructionsDialog=()=>this.instructionsLightboxController.openLightbox(),this.toggleEventListener()}render(t){if(!t)throw new Error(`Target element not found. Recieved ${t}.`);t.appendChild(this.instructionsButtonContainer)}toggleEventListener(){!0===this.#a?(this.instructionsButton.removeEventListener("click",this.openInstructionsDialog),this.#a=!1):(this.instructionsButton.addEventListener("click",this.openInstructionsDialog),this.#a=!0)}createInstructionsButton(){return a("button",[],{id:this.buttonId,type:"button"})}createInstructionsButtonContainer(){return a("div",[],{id:`${this.buttonId}-container`})}}class _{mainElement=a("main");constructor(t,e,n,i){this.players=t,this.instructionsLightboxController=e,this.cycloneSitRepScroller=n,this.gameState=i,this.instructionsButton=new K(this.instructionsLightboxController),this.mainContainerOne=this.createMainContainerOne(),this.mainContainerTwo=new z(this.players,this.gameState),this.mainContainerThree=this.createMainContainerThree(),this.renderMainContainers()}createMainContainerOne(){return function(t,e){const n={parabellum:x(t),bellum:I(e),postBellum:F()};return new O("section",n,"parabellum",["main-container"],{id:"main-container-one"})}(this.instructionsButton,this.cycloneSitRepScroller)}createMainContainerThree(){return function(t,e,n){const i=$.player.gameboardController,r=$.player.fleetBuilder.fleet,a=new V(t.id,i,r,n),o={parabellum:U(a,new M(t,a,e,n.transitionToNextPhase)),bellum:j(),postBellum:H()};return new O("section",o,"parabellum",["main-container"],{id:"main-container-three"})}(this.mainContainerTwo.playerGameboard,this.instructionsButton,this.gameState)}renderMainContainers(){this.mainContainerOne.render(this.mainElement),this.mainContainerTwo.render(this.mainElement),this.mainContainerThree.render(this.mainElement)}render(t){if(!t)throw new Error(`Target element not found. Recieved ${t}.`);t.appendChild(this.mainElement)}}var Y=JSON.parse('[{"textContent":"Drag & drop to reposition"},{"textContent":"Tap to rotate"},{"textContent":"Lock positions & ready up"}]');class q{static dialogId="instructions-dialog";static closeButtonId="instructions-dialog-close-button";constructor(){this.instructionsDialogCloseButton=this.createInstructionsDialogCloseButton(),this.instructionsDialog=this.createInstructionsDialog(this.instructionsDialogCloseButton)}get element(){return this.instructionsDialog}get closeButton(){return this.instructionsDialogCloseButton}createInstructionsDialogCloseButton(){const t=a("button",["close-button"],{id:q.closeButtonId,type:"button","aria-label":"Close Instructions Dialog"});return t.textContent="X",t}createInstructionsDialog(t){const e=a("h3",["tertiary-heading"],{id:"instructions-dialog-heading"});e.textContent="Deploy your Bips:";const n=((t,e,n={})=>{if(!t.length)throw new Error("The listItemTextContentArray is empty.");if(!e)throw new Error("You must identify your list items.");const i=new DocumentFragment;return t.forEach(((t,r)=>{const o=a("li",[`${e}-list-item`],{id:`${e}-list-item-${++r}`,...n});o.textContent=t.textContent,i.appendChild(o)})),i})(Y,"instructions"),i=a("ul",["instructions-list"],{id:"instructions-list"});i.appendChild(n);const r=a("div",[],{id:"unanchored-ship-example"}),o=a("p",[],{id:"unanchored-ship-text"});o.textContent="= Bips adrift";const s=a("div",[],{id:"visual-feedback-key-container"});s.append(r,o);const l=a("div",[],{id:"instructions-content"});l.append(e,i,s);const h=a("dialog",[],{id:q.dialogId});return h.append(t,l),h}render(t){if(!t)throw new Error(`Target element not found. Recieved ${t}.`);t.appendChild(this.instructionsDialog)}}class W{static MESSAGES={TURN:{PLAYER:"Waiting for your attack...",OPPONENT:"Your opponent is attacking..."},ATTACK:{HIT:(t,e,n)=>`${t} hit ${e} ${n}!`,SUNK:(t,e,n)=>`${t} sunk ${e} ${n}!`,MISS:t=>`${t} missed!`}};currentPlayer=null;currentSitRep=null;nextSitRep="";#o="turn";constructor(){const{container:t,current:e,next:n}=this.getControlledSitRepElements();this.sitRepContainer=t,this.sitRepTextElements={current:e,next:n}}get element(){return this.sitRepContainer}initialize=t=>{this.currentPlayer=t,this.setInitialTextContent(t)};setAndScrollToNextSitRep=async t=>{this.nextSitRep=t?this.getNextSitRep(t):this.getNextSitRep(),this.sitRepTextElements.next.textContent=this.nextSitRep,this.sitRepContainer.classList.add("scrolling"),await o(this.sitRepContainer),this.resetSitRepContainer(),await n(500)};getAttackSitRep=(t,e)=>{const{hit:n,isSunk:i,type:r}=e,a="player"===t?"You":"Your opponent",o="player"===t?"their":"your";return n&&r?i?W.MESSAGES.ATTACK.SUNK(a,o,r):W.MESSAGES.ATTACK.HIT(a,o,r):W.MESSAGES.ATTACK.MISS(a)};getNextSitRep=t=>{if("attack"===this.#o&&this.toggleCurrentPlayer(),this.toggleSitRepType(),null===this.currentPlayer)throw new Error("`currentPlayer` cannot be null. Ensure it is assigned a valid `PlayerType` before retrieving the next sit rep.");return t?this.getAttackSitRep(this.currentPlayer,t):this.getTurnSitRep(this.currentPlayer)};getTurnSitRep=t=>"player"===t?W.MESSAGES.TURN.PLAYER:W.MESSAGES.TURN.OPPONENT;resetSitRepContainer=()=>{const{current:t,next:e}=this.sitRepTextElements;this.sitRepContainer.classList.remove("scrolling"),this.currentSitRep=this.nextSitRep,t.textContent=this.currentSitRep,this.nextSitRep="",e.textContent=this.nextSitRep,this.sitRepContainer.removeEventListener("transitionend",this.resetSitRepContainer)};setInitialTextContent=t=>{const e="player"===t?W.MESSAGES.TURN.PLAYER:W.MESSAGES.TURN.OPPONENT;this.currentSitRep=e,this.sitRepTextElements.current.textContent=e};toggleCurrentPlayer=()=>{this.currentPlayer="player"===this.currentPlayer?"opponent":"player"};toggleSitRepType=()=>{this.#o="turn"===this.#o?"attack":"turn"};getControlledSitRepElements=()=>{const t=a("div",[],{id:"sit-rep-container"});let e=null,n=null,i=null,r=null;return["current","next"].forEach((t=>{const o=a("div",["sit-rep-text-content"],{id:`${t}-sit-rep-text-content`});"current"===t?e=o:n=o;const s=a("div",["sit-rep-slot"],{id:`${t}-update-container`});"current"===t?i=s:r=s,s.appendChild(o)})),t.append(r,i),{container:t,current:e,next:n}}}class J{cycloneSitRepScroller=new W;header=function(){const t=function(){const t=a("a",["heading-link"],{id:"heading-link",href:"https://johnkeyscloud.github.io/battleship/"});t.textContent="ShattleBip";const e=a("h1",["main-heading"]);e.appendChild(t);const n=function(t="50px",e="#FFF",n="johnKeysCloud",i){const r=document.createElementNS("http://www.w3.org/2000/svg","path");r.setAttribute("d","M8.20003216,0 C3.67186256,0 0,3.67233045 0,8.2025137 C0,11.8266603 2.34955472,14.9012922 5.60770169,15.9859115 C6.01749428,16.0618219 6.16798309,15.8079721 6.16798309,15.5913056 C6.16798309,15.3957396 6.16033003,14.7495356 6.15685721,14.064154 C3.87553694,14.5603383 3.3941657,13.0963596 3.3941657,13.0963596 C3.02115925,12.1482506 2.48370842,11.896202 2.48370842,11.896202 C1.7397535,11.3870871 2.53978801,11.3975087 2.53978801,11.3975087 C3.36323189,11.4554066 3.79681972,12.242817 3.79681972,12.242817 C4.52816959,13.4968196 5.71510182,13.1342505 6.18303197,12.9247247 C6.25660428,12.3945093 6.46915364,12.0327122 6.70363321,11.8278826 C4.88233278,11.6204154 2.96765212,10.9170854 2.96765212,7.77413412 C2.96765212,6.87864774 3.28798748,6.14688355 3.81257603,5.57247278 C3.72742766,5.36584187 3.44677247,4.53159853 3.89200067,3.40175461 C3.89200067,3.40175461 4.58058343,3.18129256 6.14759636,4.24255971 C6.80164386,4.06076054 7.50315322,3.96966796 8.20003216,3.96658007 C8.89691109,3.96966796 9.59893494,4.06076054 10.2542687,4.24255971 C11.8194166,3.18129256 12.5070347,3.40175461 12.5070347,3.40175461 C12.9533562,4.53159853 12.6725723,5.36584187 12.587424,5.57247278 C13.1131701,6.14688355 13.4313189,6.87858341 13.4313189,7.77413412 C13.4313189,10.9245478 11.5130368,11.6182925 9.68710595,11.8213208 C9.98120223,12.0758783 10.2432714,12.5750862 10.2432714,13.3403025 C10.2432714,14.4377879 10.2337533,15.3211158 10.2337533,15.5913056 C10.2337533,15.8095804 10.3813481,16.0653602 10.7970574,15.9848178 C14.0534036,14.8989763 16.4,11.825438 16.4,8.2025137 C16.4,3.67233045 12.7286519,0 8.20003216,0");const a=document.createElementNS("http://www.w3.org/2000/svg","path");D(a,{d:"M3.07518929,11.6824029 C3.05731167,11.723257 2.99359073,11.7355197 2.93568001,11.7075092 C2.87662002,11.6806603 2.84341872,11.6248974 2.86257332,11.5838496 C2.88013169,11.5417693 2.94385264,11.5300229 3.00278493,11.5582916 C3.06197262,11.5850759 3.09568471,11.6413552 3.07518929,11.6824029 M3.47564797,12.0435714 C3.436828,12.0799722 3.36091196,12.0630626 3.30938611,12.0055571 C3.25613634,11.9481806 3.24617596,11.8715065 3.28557057,11.8345248 C3.32560367,11.7981885 3.39922115,11.8151627 3.45259861,11.8726037 C3.50584838,11.9306256 3.51619186,12.0068479 3.47558413,12.0436359 M3.75038868,12.5056811 C3.70045904,12.5407266 3.61886048,12.5078755 3.5684839,12.4346866 C3.51861811,12.3615623 3.51861811,12.2737872 3.56956933,12.2386127 C3.62013745,12.2034381 3.70045904,12.235063 3.75153796,12.307671 C3.8013399,12.3820861 3.8013399,12.4698612 3.75032483,12.5057457 M4.2149514,13.0409152 C4.1703212,13.0906114 4.07531442,13.0773161 4.0057194,13.0094195 C3.93459201,12.9430719 3.91473508,12.8489074 3.95949298,12.7991467 C4.00463397,12.7493214 4.10021539,12.7633267 4.1703212,12.8306424 C4.24100164,12.8968609 4.26258248,12.9917354 4.21501525,13.0409152 M4.81538402,13.2216286 C4.79578249,13.2860399 4.70422354,13.3153413 4.6120261,13.2879762 C4.51995636,13.259772 4.45968324,13.1842596 4.4782632,13.1191383 C4.49741779,13.0542751 4.58935983,13.0237475 4.68225961,13.0530489 C4.77420165,13.081124 4.83460247,13.1560554 4.81544787,13.2216286 M5.49881989,13.2982381 C5.50111844,13.3661347 5.42290385,13.422414 5.32610931,13.4236402 C5.22874013,13.4257701 5.15001476,13.3708461 5.14899318,13.3041113 C5.14899318,13.2355693 5.22542,13.1798063 5.32272533,13.1781928 C5.41951987,13.1762566 5.49881989,13.2307933 5.49881989,13.2982381 M6.17012451,13.2722283 C6.18174496,13.3384468 6.11444849,13.4064725 6.01835628,13.4245438 C5.92386029,13.4419697 5.83638766,13.4011156 5.82432026,13.3354779 C5.81257211,13.2675814 5.88114555,13.1996203 5.97545,13.1820007 C6.07173375,13.1650911 6.15786557,13.2049126 6.17012451,13.2722283","fill-rule":"nonzero"});const o=document.createElementNS("http://www.w3.org/2000/svg","g");o.setAttribute("fill",e),o.append(r,a);const s=document.createElementNS("http://www.w3.org/2000/svg","g");D(s,{stroke:"none","stroke-width":"1",fill:"none","fill-rule":"evenodd"}),s.appendChild(o);const l=document.createElementNS("http://www.w3.org/2000/svg","svg");D(l,{viewBox:"0 0 17 16",version:"1.1",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t,height:t}),l.classList.add("git-hub-svg"),l.appendChild(s);const h=document.createElement("a");return h.classList.add("git-hub-logo-link"),D(h,{href:i?`https://github.com/${n}/${i}`:`https://github.com/${n}`,rel:"noopener noreferrer",target:"_blank",type:"button","aria-label":"GitHub profile link"}),h.appendChild(l),h}(),i=a("nav");return i.append(e,n),i}(),e=a("header");return e.appendChild(t),e}();instructionsDialog=new q;constructor(t,e){if(this.gameState=t,this.billowBot=e,!document)throw new Error("Fuck!");const n=document.getElementById("content");if(!n)throw new Error("Shit!");this.content=n,this.instructionsLightboxController=new k(this.instructionsDialog.element,"instructions-dialog-close-button"),this.mainComponent=new _($,this.instructionsLightboxController,this.cycloneSitRepScroller,this.gameState),this.gameState.eventBus.on("transitionToNextPhase",this.transitionToNextPhase),this.gameState.eventBus.on("togglePlayerTurn",this.togglePlayerTurn),this.gameState.eventBus.on("setAndScrollToNextSitRep",this.cycloneSitRepScroller.setAndScrollToNextSitRep)}render(){this.content.appendChild(this.header),this.mainComponent.render(this.content),this.instructionsDialog.render(document.body)}readyPlayerOne=()=>{"player"===this.gameState.currentPlayer&&this.mainComponent.mainContainerTwo.element.classList.add("player-turn")};togglePlayerTurn=()=>{"player"===this.gameState.currentPlayer?this.mainComponent.mainContainerTwo.element.classList.add("player-turn"):this.mainComponent.mainContainerTwo.element.classList.remove("player-turn")};transitionToNextPhase=async()=>{if("bellum"===this.gameState.currentGamePhase){if(this.gameState.setInitialPlayer(),!this.gameState.currentPlayer)throw new Error("Current player must be set in game state.");this.initializeSitRepScroller(this.gameState.currentPlayer)}if(this.mainComponent.mainContainerOne.swapByOrder(),this.mainComponent.mainContainerThree.swapByOrder(),await this.updateGameboardOnTransition(this.gameState),"opponent"===this.gameState.currentPlayer){const t=await this.billowBot.attack();console.log("billowAttackResult",t)}};updateGameboardOnTransition=async t=>{"parabellum"===this.gameState.currentGamePhase&&this.resetGame(),"bellum"===this.gameState.currentGamePhase&&(this.readyPlayerOne(),this.mainComponent.mainContainerTwo.element),this.gameState.currentGamePhase};initializeSitRepScroller=t=>{this.cycloneSitRepScroller.element?this.cycloneSitRepScroller.initialize(t):console.error("CycloneSitRepScroller element is null or undefined!")};resetGame=()=>{this.mainComponent.mainContainerOne.swapFragmentByKey("parabellum"),this.mainComponent.mainContainerThree.swapFragmentByKey("parabellum"),this.gameState.resetGameState()}}class X{currentGamePhase="parabellum";currentPlayer=null;static getInitialPlayer(){return Math.random()>.5?"player":"opponent"}constructor(t){this.eventBus=t}setAndScrollToNextSitRep=t=>{this.eventBus.emit("setAndScrollToNextSitRep",t)};transitionToNextPhase=()=>{switch(this.currentGamePhase){case"parabellum":this.currentGamePhase="bellum";break;case"bellum":this.currentGamePhase="postBellum";break;case"postBellum":this.currentGamePhase="parabellum"}this.eventBus.emit("transitionToNextPhase")};toggleActiveGameboard=()=>{this.eventBus.emit("toggleActiveGameboard",this.currentPlayer)};togglePlayerTurn=()=>{this.currentPlayer="player"===this.currentPlayer?"opponent":"player",this.eventBus.emit("togglePlayerTurn"),this.eventBus.emit("setAndScrollToNextSitRep")};resetGameState=()=>{this.currentGamePhase="parabellum",this.currentPlayer=null,this.eventBus.emit("gameReset")};setInitialPlayer=()=>{this.currentPlayer=X.getInitialPlayer(),this.eventBus.emit("playerTurnChange",this.currentPlayer)}}class Q{events={};on(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)}off(t,e){this.events[t]&&(this.events[t]=this.events[t].filter((t=>t!==e)))}async emit(t,e){return this.events[t]?await Promise.all(this.events[t].map((t=>t(e)))):[]}}class Z{#s;#l=null;#h=null;constructor(t){this.gameState=t,this.#s=new Set,this.populatepossibleAttacksSet()}attack=async()=>{try{const t=await this.determineNextTarget();console.log("attackCoordinates",t);const[e]=await this.gameState.eventBus.emit("billowAttack",t);return e.hit&&this.rememberLastTargetHit(t),e}catch(t){throw console.error("Error in BillowBot.attack:",t),t}};getNextAttackCoordinates(t,e){const n=this.getRandomCoordinates();return this.#l=n,n}async determineNextTarget(){return await this.ponder(),this.getNextAttackCoordinates(this.#l,this.#h)}ponder(){return new Promise((t=>setTimeout(t,3e3)))}populatepossibleAttacksSet(){for(let t=0;t<10;t++)for(let e=0;e<10;e++)this.#s.add(`${t},${e}`)}getRandomCoordinates(){const t=Array.from(this.#s)[Math.floor(Math.random()*this.#s.size)];this.#s.delete(t);const e=t.split(",").map(Number);if(!c(e))throw new Error("Invalid coordinates");return e}getSmartCoordinates(t){if(!t)throw new Error("Last attack coordinates are required");const[e,n]=t;return[0,0]}rememberLastTargetHit(t){this.#l=t,this.#h=!0}}class tt{constructor(){this.eventBus=new Q,this.gameState=new X(this.eventBus),this.billowBot=new Z(this.gameState),this.domController=new J(this.gameState,this.billowBot)}static powerOn(){return console.time("Loading"),f($.player.gameboardController,$.player.fleetBuilder.fleet),f($.opponent.gameboardController,$.opponent.fleetBuilder.fleet),console.timeEnd("Loading"),new tt}pressStart(){this.domController.render()}}console.time("powerOn");const et=tt.powerOn();console.timeEnd("powerOn"),console.time("pressStart"),et.pressStart(),console.timeEnd("pressStart")}();
//# sourceMappingURL=index.bundle.js.map